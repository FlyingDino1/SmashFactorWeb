(()=>{var e={};e.id=380,e.ids=[380],e.modules={6330:e=>{"use strict";e.exports=require("@prisma/client")},846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},4334:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>x,routeModule:()=>d,serverHooks:()=>m,workAsyncStorage:()=>c,workUnitAsyncStorage:()=>l});var a={};r.r(a),r.d(a,{POST:()=>u});var s=r(2706),n=r(8203),o=r(5994),p=r(9187);let i=new(r(6330)).PrismaClient;async function u(e){return(await e.json()).forEach(async e=>{await i.players.upsert({where:{id:e.id},update:{smashfactor:e.smashfactor,games_played:e.games_played,updatedAt:new Date},create:{name:e.name,smashfactor:e.smashfactor,games_played:e.games_played,createdAt:new Date,updatedAt:new Date}})}),p.NextResponse.json({status:"successfully posted"})}let d=new s.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/sendData/route",pathname:"/api/sendData",filename:"route",bundlePath:"app/api/sendData/route"},resolvedPagePath:"C:\\Users\\4mcda\\Downloads\\SmashFactorWeb\\src\\app\\api\\sendData\\route.ts",nextConfigOutput:"",userland:a}),{workAsyncStorage:c,workUnitAsyncStorage:l,serverHooks:m}=d;function x(){return(0,o.patchFetch)({workAsyncStorage:c,workUnitAsyncStorage:l})}},6487:()=>{},8335:()=>{}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[989,452],()=>r(4334));module.exports=a})();